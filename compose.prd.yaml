services:
  app:
    build:
      context: ./docker
      dockerfile: Dockerfile
    container_name: test-next-js-app
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    networks:
      - app_network
    restart: always

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=todo_app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
      - TZ=Asia/Tokyo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todo_app"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  node_modules:

networks:
  app_network:
    driver: bridge
